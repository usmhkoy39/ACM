概念：
使用动态规划处理字符串匹配并没有定式的模板，只能多练，故这篇主要写dp处理字符串的题的心得

适用问题：

例子：
51Nod1183 编辑距离——dp（动态规划处理字符串匹配问题）
https://www.51nod.com/Challenge/Problem.html#problemId=1183

步骤：
根据题意写出状态转移方阵。
由于一般用dp处理字符串的匹配问题，故先用dp[i][j],字符串s的前i+1个字符与字符串t的前j+1个字符的匹配情况
由于只有两种状态能够形成dp[i][j]，分别是a[i]==b[j]与a[i]!=b[j],一般这两个状态可以再根据题意写出具体的更新操作或者不同的更新分支
最后将状态转移方程转换成代码即可，具体可看例子中的题解在实例下理解

图例：

模板：

注：

